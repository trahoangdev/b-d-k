version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: big-data-keeper-postgres
    environment:
      POSTGRES_DB: big_data_keeper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - big-data-keeper-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: big-data-keeper-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - big-data-keeper-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: big-data-keeper-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - big-data-keeper-network

  # Backend API
  api:
    build: .
    container_name: big-data-keeper-api
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/big_data_keeper?schema=public
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      JWT_SECRET: your-super-secret-jwt-key-here
      NODE_ENV: production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - big-data-keeper-network
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  big-data-keeper-network:
    driver: bridge
